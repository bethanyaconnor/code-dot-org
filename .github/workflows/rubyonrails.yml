# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Ruby on Rails CI"
on:
  push:
    branches: [ "staging" ]
  pull_request:
    branches: [ "staging" ]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: dashboard_test
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_HOST: localhost
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10
    env:
      CI: true
      RAILS_ENV: test
      RACK_ENV: test
      DISABLE_SPRING: 1
      MYSQL_DATABASE: dashboard_test
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ALLOW_EMPTY_PASSWORD: true
      MYSQL_HOST: localhost
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@8f312efe1262fb463d906e9bf040319394c18d3e # v1.92
        with:
          ruby-version: 2.5
          bundler-cache: true
          
      - name: Bundle Install
        run: |
          bundle install --with test
          cd dashboard/
          bundle install
          cd ../
          
      - name: Start MySQL
        run: sudo /etc/init.d/mysql start 
        
      # Add or replace database setup steps here
      - name: Create db
        run: |
          cd dashboard/
          bundle exec rake db:create
          cd ../
      - name: Install Dashboard
        run: bundle exec rake install:dashboard --trace
      # Add or replace test runners here
      #- name: Run tests
      #  run: |
      #    cd dashboard/
      #    bin/rake
      #    cd ../
